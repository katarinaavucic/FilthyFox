// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  photo String ?
  // a list of Tasks the User is assigned to
  tasks Task[]
  // a House assigned to the User, onDelete SetNull for now
  houseId Int ?
  house House ? @relation(fields: [houseId], references: [id], onDelete: SetNull)
}

model Task {
  id Int @id @default(autoincrement())
  name String
  description String
  // server to ensure it is either ["To-do", "In Progress", "Complete"]
  status String @default("To-do")
  dueDate DateTime @default(now())
  isRecurring Boolean @default(false)
  // optional recursive time (only accessed if isRecurring)
  recursiveTime Int ?
  // flag if urgent alert has been triggered
  isUrgent Boolean @default(false)
  // optional User assigned to the Task, onDelete user is NULL
  userId Int ? 
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)
}

model House {
  id Int @id @default(autoincrement())
  name String
  // a list of Users belonging to the House
  users User[]
}